how do you feel about a table of packages, versions of packages, a System column(s) that track which system has what packages+versions and actions that cause "apt-gets" to run in the client (e.g. could even be the pre-existing action_upgrade_software.

Gerwin van de Steeg [11:14 AM]
ahahhahaha..

Scott Woods [11:14 AM]
hahahahahaha...

Gerwin van de Steeg [11:14 AM]
so let me read this again

Scott Woods [11:15 AM]
for sure :slightly_smiling_face:....

Gerwin van de Steeg [11:15 AM]
add to each system, a list of packages and the current version it thinks its on for that package and a method to issue an update of said packages?
which is waht the action_upgrade_software was intended for.. to run an apt-get update
2 problems that need to be answered.. upgrade to the "latest versions only?" or allow upgrade to "specific versions?"

Scott Woods [11:16 AM]
for sure. i am guessing that you had all this lined-up. what i am hoping to contribute is good, fully async management of sub-processing like apt-gets.

Gerwin van de Steeg [11:16 AM]
the second problem is caused by expanding the list of software we want to keep updated, and then not having any information on it
or that the software is not installed, or an alternate is installed
for exxample: teh sound prompts package for asterisk has multiple variants, there's the default one with a US voice; there's our one with a vadacom voice set; and then there's the next telecom one with an AU voice seet
so you see, some software packages have alternates available for install
then for buddy for example; (not everyone has buddy installed at the moment, so that's a problem space), but there's the optional extra package for the nexttelecom customisations (which changes some logos)

Scott Woods [11:19 AM]
iiuc - the data model to represent this stuff gets overly heavy?

Gerwin van de Steeg [11:19 AM]
all depending on implementation, but there are a good tonne of special cases that need to have their behaviour documented
and yeah.. if all needs to be dealt with it can get overly heavy
what I had before as a plan was to allow resellers to specify a version
err.. lets try that again

Scott Woods [11:20 AM]
would some of the load be carried by the apt-get system itself - through dependencies?

Gerwin van de Steeg [11:21 AM]
my original concept was to allow resellers to specify a version on a group of systems and then upgrade them to that specific version, this way they can control the versions used by their customers and can test latest releases on select customers

Scott Woods [11:21 AM]
nice.

Gerwin van de Steeg [11:21 AM]
a lot of the dependencies are handled by apt, but there are two problems with our existing upgrade process
at certain points we need to use apt-get to ugprade; at others we must use aptitude to upgrade, both do something the other does not and is required at those stages\

Scott Woods [11:22 AM]
fuck.

Gerwin van de Steeg [11:22 AM]
yeah
pre- a certain version we must use aptitude
it gets to be a really complicated mess quickly

Scott Woods [11:24 AM]
that certainly adds to the picture. its all going a bit jackson pollock.

Gerwin van de Steeg [11:25 AM]
then there's the situation of how to handle customisations that have been encountered during upgrade of software.. ie.. your upgrade requires an interaction.. or you're trying to upgrade during something which has the dpkg repo locked, or a misconfigured/partially completed install
all problems thta need to be detected and dealt with
you can see why i've been laughing my arse off everytime stu brings up this job
the other problem you have to deal with is the fact that you cannot run upgrades during business hours operation
and eacch system has different business hours of operation
and can be spread across one or more timezones for their operation as well

Scott Woods [11:27 AM]
is there any merit in providing a relatively "raw" apt-get and aptitude server-to-client message. suppose thats too dangerous as reseller level :disappointed: lol - there's more, and more...

Gerwin van de Steeg [11:27 AM]
yeah.. they don't get access to that ever
so for example; webman cannot be upgraded during business hours because of the buddy api's..
asterisk when upgraded doesn't actually restart aterisk at any point so you can upgrade it fine.. but it'll still be running the old version so youll get out of sync discrepancies
buddy should be upgradable during business hours

Scott Woods [11:29 AM]
business hours and timezones? that at least falls under the umbrella of "work scheduling". its the multi-headed dog of a package/version/tool that starts the rot.

Gerwin van de Steeg [11:29 AM]
then you get the problem of upgrading the license client from inside the license client so that's goign to cause you fun
yeah.. but for the system maintenance distribution of work that's also on your plate.. that's where timezones and the like become a problem
then the next problem is that the license client runs not only on a PBX
but that's an exception to the rule and we can ignore it
but some of the systems in the vpnmanager are not PBXs.. they're Debian 6/7/8 boxes running a license client because of them being an Enterprise box that has OpenVZ images
(so anythign you design for everything is going to fail for them)
i hope you're making notes in the bug for this so that it won't be forgotten

Scott Woods [11:32 AM]
nah - watching youtube.
:slightly_smiling_face:

Gerwin van de Steeg [11:33 AM]
good.. what i'd be doing instead of this work

Scott Woods [11:34 AM]
lol. so the db model for the multi-headed dog gets more complicated - it needs to understand the Platform the System is running on. fark.

Gerwin van de Steeg [11:34 AM]
you need to be aware of each of these things, and make documented notes on expected behaviour in these situations
that way the next poor schmuck that has to work on it gets to tear their hair out (hence my preventative haircut)