(.ansar-connect) scott@seneca:~/gh/ansar-connect/doc/source$ grep -o '[a-zA-Z0-9][_a-zA-Z0-9]*()' *.rst | awk -F: '{print $2}' | sort | uniq
Abandoned()
Aborted()
Accepted()
accepted_at_address()
Ack()
Available()
bind()
Cleared()
client()
Closed()
connect()
Connected()
connected_at_address()
connected_to_address()
connect_to_address()
Connnected()
create()
CreateFrame()
create_node()
create_object()
Delivered()
Dropped()
Enquiry()
Float8()
get_wandering()
Hello()
init__()
Job()
job_batch()
keys()
listen()
listen_at_address()
publish()
publish_a_service()
random()
reply()
sample()
say_hello()
seed()
select()
send()
server()
Stop()
subscribe()
subscribe_to_service()
Threaded()
update()
uuid4()
Welcome()
(.ansar-connect) scott@seneca:~/gh/ansar-connect/doc/source$ 

EXAMPLE CODE
accepted_at_address()
client()
connected_at_address()
connected_to_address()
connect_to_address()
get_wandering()
Hello()
init__()
Job()
job_batch()
listen_at_address()
publish_a_service()
say_hello()
server()
subscribe_to_service()
Welcome()

PYTHON LIBS
keys()
random()
seed()
uuid4()

ANSAR-CREATE, ANSAR-ENCODE
Aborted()
Ack()
bind()
Enquiry()
Float8()
reply()
sample()
select()
send()
Stop()
Threaded()
create()

ANSAR-CONNECT
listen()
connect()
Connected()
Abandoned()
Closed()
Accepted()
CreateFrame()
create_node()
create_object()
publish()
subscribe()
Available()
Delivered()
Dropped()
Cleared()
update()


Network Administration
======================

* ansar **network** <*group*> <*home*>
* ansar **ping** <*service*> <*group*> <*home*>
* ansar **signup**
* ansar **login**
* ansar **account**
* ansar **directory**


`ansar-create <https://pypi.org/project/ansar-create>`_

:func:`~.framework.create_object`

:class:`~.lifecycle.Stop`

:meth:`~.point.Point.complete`











